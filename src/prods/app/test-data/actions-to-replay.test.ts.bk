import {
    authedUser,
    // tslint:disable-next-line:ordered-imports
    createUserAngeloOcana,
    authUserAngeloOcana,
    updateUserAngeloOcana,
    failAuthUserAngeloOcana,
    forgotPasswordAngeloOcana,
    updatePasswordTokenAngeloOcana,
    updatePasswordAngeloOcana
} from './actions-to-replay';

import { User } from 'ptz-user-domain';

import { allActions } from '../allActions';

import { ActionStore, IActionStore } from 'ptz-action-domain';

describe('Actions to replay - Send to toDoStore', () => {
    var actionStore: IActionStore;

    beforeEach(() => {
        actionStore = new ActionStore();

        actionStore.toDoStore.subscribeAll(action => {
            switch (action.actionType) {
                case allActions.AUTH_USER: console.log('log subscriber AUTH_USER'); break;
                case allActions.DELETE_USER: console.log('log subscriber DELETE_USER'); break;
                case allActions.FORGOT_PASSWORD: console.log('log subscriber FORGOT_PASSWORD'); break;
                case allActions.SAVE_USER: console.log('log subscriber SAVE_USER'); break;
                case allActions.UPDATE_PASSWORD: console.log('log subscriber UPDATE_PASSWORD'); break;
                case allActions.UPDATE_PASSWORD_TOKEN: console.log('log subscriber UPDATE_PASSWORD_TOKEN'); break;
            }
        });

        actionStore.toDoStore.subscribeAll(action => console.log('logALL subscriber ' + action.actionType));
    });

    it('Play actions', () => {
        actionStore.toDoStore.dispatch(createUserAngeloOcana);
        actionStore.toDoStore.dispatch(authUserAngeloOcana);
        actionStore.toDoStore.dispatch(updateUserAngeloOcana);
        actionStore.toDoStore.dispatch(failAuthUserAngeloOcana);
        actionStore.toDoStore.dispatch(forgotPasswordAngeloOcana);
        actionStore.toDoStore.dispatch(updatePasswordTokenAngeloOcana);
        actionStore.toDoStore.dispatch(updatePasswordAngeloOcana);
    });

    it('GraphQL mutation example', () => {
        const user = new User({
            displayName: 'Ângelo Ocanã',
            email: 'angeloocana@gmail.com',
            userName: 'angeloocana',
            password: 'testtest'
        });

        function userSaved(data) {
            console.log('-----userSaved: ', data);
        }

        actionStore.successStore.subscribe(allActions.SAVE_USER, userSaved);

        actionStore.successStore.dispatch({
            actionType: allActions.SAVE_USER,
            args: {
                user,
                authedUser
            }
        });
    });
});
