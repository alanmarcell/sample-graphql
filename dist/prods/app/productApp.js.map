{"version":3,"sources":["../../../dist-esnext/prods/app/productApp.js"],"names":["V","createApp","productAppArgs","productRepository","saveProduct","updateProduct","findProducts","find","deleteProduct","seed","curry","func","args","productArgs","createdBy","authedUser","product","isValid","Promise","resolve","getById","id","productDb","save","query","limit","options","products","allProducts","map"],"mappings":";;;;;;;AAAA;;IAAYA,C;;AACZ;;AACA;;;;;;;;;;AACO,IAAMC,gCAAY,SAAZA,SAAY,CAACC,cAAD,EAAoB;AACzC,QAAMC,oBAAoBD,eAAeC,iBAAzC;AACA,WAAO;AACHC,qBAAaA,YAAY;AACrBD,gDADqB;AAErBE;AAFqB,SAAZ,CADV;AAKHC,sBAAcA,aAAaH,kBAAkBI,IAA/B,CALX;AAMHC,oCANG;AAOHC;AAPG,KAAP;AASH,CAXM;AAYA,IAAML,oCAAc,gBAAEM,KAAF;AAAA,uEAAQ,iBAAOC,IAAP,EAAaC,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/BA,6BAAKC,WAAL,CAAiBC,SAAjB,GAA6BF,KAAKG,UAAlC;AACIC,+BAF2B,GAEjB,2BAAcJ,KAAKC,WAAnB,CAFiB;;AAAA,4BAG1Bb,EAAEiB,OAAF,CAAUD,OAAV,CAH0B;AAAA;AAAA;AAAA;;AAAA,yDAIpBE,QAAQC,OAAR,CAAgBH,OAAhB,CAJoB;;AAAA;AAAA;AAAA,+BAKPL,KAAKR,iBAAL,CAAuBiB,OAAvB,CAA+BJ,QAAQK,EAAvC,CALO;;AAAA;AAKzBC,iCALyB;;AAM/B,4BAAIA,SAAJ,EACIN,UAAUL,KAAKN,aAAL,CAAmBiB,SAAnB,EAA8BN,OAA9B,CAAV;AAP2B;AAAA,+BAQfL,KAAKR,iBAAL,CAAuBoB,IAAvB,CAA4BP,OAA5B,CARe;;AAAA;AAQ/BA,+BAR+B;AAAA,yDASxBE,QAAQC,OAAR,CAAgBH,OAAhB,CATwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAR;;AAAA;AAAA;AAAA;AAAA,IAApB;AAWP;AACO,IAAMV,sCAAe,gBAAEI,KAAF;AAAA,wEAAQ,kBAAOH,IAAP,EAAaK,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA,0DAAsBL,KAAKK,KAAKY,KAAV,EAAiB,EAAEC,OAAOb,KAAKc,OAAL,CAAaD,KAAtB,EAAjB,CAAtB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAR;;AAAA;AAAA;AAAA;AAAA,IAArB;AACA,IAAMhB,sBAAO,gBAAEC,KAAF,CAAQ,UAACP,iBAAD,EAAoBY,UAApB,EAAmC;AAC3D,QAAMY,WAAW,iBAAeC,WAAhC;AACAD,aAASE,GAAT;AAAA,4EAAa,kBAAOb,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAyBZ,YAAY,EAAED,oCAAF,EAAZ,EAAmC,EAAEU,aAAaG,OAAf,EAAwBD,sBAAxB,EAAnC,CAAzB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAb;;AAAA;AAAA;AAAA;AAAA;AACA,WAAOG,QAAQC,OAAR,CAAgB,IAAhB,CAAP;AACH,CAJmB,CAAb;AAKA,IAAMX,wCAAgB,SAAhBA,aAAgB,CAACI,IAAD,EAAU;AACnC,WAAOM,QAAQC,OAAR,CAAgB,KAAhB,CAAP;AACH,CAFM;AAGP","file":"productApp.js","sourcesContent":["import * as V from 'ptz-validations';\r\nimport { createProduct, products as productsToSeed, updateProduct as updateProductFunc } from '../domain';\r\nimport R from 'ramda';\r\nexport const createApp = (productAppArgs) => {\r\n    const productRepository = productAppArgs.productRepository;\r\n    return {\r\n        saveProduct: saveProduct({\r\n            productRepository,\r\n            updateProduct: updateProductFunc,\r\n        }),\r\n        findProducts: findProducts(productRepository.find),\r\n        deleteProduct,\r\n        seed\r\n    };\r\n};\r\nexport const saveProduct = R.curry(async (func, args) => {\r\n    args.productArgs.createdBy = args.authedUser;\r\n    var product = createProduct(args.productArgs);\r\n    if (!V.isValid(product))\r\n        return Promise.resolve(product);\r\n    const productDb = await func.productRepository.getById(product.id);\r\n    if (productDb)\r\n        product = func.updateProduct(productDb, product);\r\n    product = await func.productRepository.save(product);\r\n    return Promise.resolve(product);\r\n});\r\n// tslint:disable-next-line:max-line-length\r\nexport const findProducts = R.curry(async (find, args) => find(args.query, { limit: args.options.limit }));\r\nexport const seed = R.curry((productRepository, authedUser) => {\r\n    const products = productsToSeed.allProducts;\r\n    products.map(async (product) => await saveProduct({ productRepository }, { productArgs: product, authedUser }));\r\n    return Promise.resolve(true);\r\n});\r\nexport const deleteProduct = (args) => {\r\n    return Promise.resolve(false);\r\n};\r\n//# sourceMappingURL=productApp.js.map"]}