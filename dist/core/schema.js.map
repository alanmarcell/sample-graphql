{"version":3,"sources":["../../dist-esnext/core/schema.js"],"names":["Schema","userApp","authedUser","log","appSchema","menuSchema","userSchema","prodsSchema","viewer","viewerType","name","fields","id","app","type","appType","resolve","menu","menuType","userConnection","getUserConnection","prods","getProds","outputViewer","schema","query","mutation","saveUser","getSaveUserMutation","getAuthToken","getAuthTokenMutation","saveProd","getSaveProdMutation"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA,SAASA,MAAT,CAAgBC,OAAhB,EAAyBC,UAAzB,EAAqCC,GAArC,EAA0C;AACtC,QAAMC,YAAY,yBAAU,EAAED,QAAF,EAAV,CAAlB;AACA,QAAME,aAAa,0BAAW,EAAEF,QAAF,EAAX,CAAnB;AACA,QAAMG,aAAa,0BAAW,EAAEL,gBAAF,EAAWC,sBAAX,EAAuBC,QAAvB,EAAX,CAAnB;AACA,QAAMI,cAAc,2BAAYJ,GAAZ,CAApB;AACA,QAAMK,SAAS,EAAf;AACA,QAAMC,aAAa,+BAAsB;AACrCC,cAAM,QAD+B;AAErCC,gBAAQ;AAAA,mBAAO;AACXC,oBAAI,iCAAc,QAAd,CADO;AAEXC,qBAAK,EAAEC,MAAMV,UAAUW,OAAlB,EAA2BC,SAAS;AAAA;AAAA,qBAApC,EAFM;AAGXC,sBAAM,EAAEH,MAAMT,WAAWa,QAAnB,EAA6BF,SAAS;AAAA;AAAA,qBAAtC,EAHK;AAIXG,gCAAgBb,WAAWc,iBAAX,EAJL;AAKXC,uBAAOd,YAAYe,QAAZ;AALI,aAAP;AAAA;AAF6B,KAAtB,CAAnB;AAUA,QAAMC,eAAe;AACjBT,cAAML,UADW;AAEjBO,iBAAS;AAAA,mBAAMR,MAAN;AAAA;AAFQ,KAArB;AAIA,QAAMgB,SAAS,2BAAkB;AAC7BC,eAAO,+BAAsB;AACzBf,kBAAM,OADmB;AAEzBC,oBAAQ;AAAA,uBAAO;AACXH,4BAAQ;AACJM,8BAAML,UADF;AAEJO,iCAAS;AAAA,mCAAMR,MAAN;AAAA;AAFL;AADG,iBAAP;AAAA;AAFiB,SAAtB,CADsB;AAU7BkB,kBAAU,+BAAsB;AAC5BhB,kBAAM,UADsB;AAE5BC,oBAAQ;AAAA,uBAAO;AACXgB,8BAAUrB,WAAWsB,mBAAX,CAA+BL,YAA/B,CADC;AAEXM,kCAAcvB,WAAWwB,oBAAX,CAAgCP,YAAhC,CAFH;AAGXQ,8BAAUxB,YAAYyB,mBAAZ;AAHC,iBAAP;AAAA;AAFoB,SAAtB;AAVmB,KAAlB,CAAf;AAmBA,WAAOR,MAAP;AACH;kBACcxB,M;AACf","file":"schema.js","sourcesContent":["import MenuSchema, { menu } from '../menus/menuSchema';\r\nimport ProdsSchema from '../prods/prodsSchema';\r\nimport UserSchema from '../users/userSchema';\r\nimport AppSchema, { app } from './appSchema';\r\nimport { GraphQLObjectType, GraphQLSchema } from 'graphql';\r\nimport { globalIdField } from 'graphql-relay';\r\nfunction Schema(userApp, authedUser, log) {\r\n    const appSchema = AppSchema({ log });\r\n    const menuSchema = MenuSchema({ log });\r\n    const userSchema = UserSchema({ userApp, authedUser, log });\r\n    const prodsSchema = ProdsSchema(log);\r\n    const viewer = {};\r\n    const viewerType = new GraphQLObjectType({\r\n        name: 'Viewer',\r\n        fields: () => ({\r\n            id: globalIdField('Viewer'),\r\n            app: { type: appSchema.appType, resolve: () => app },\r\n            menu: { type: menuSchema.menuType, resolve: () => menu },\r\n            userConnection: userSchema.getUserConnection(),\r\n            prods: prodsSchema.getProds()\r\n        })\r\n    });\r\n    const outputViewer = {\r\n        type: viewerType,\r\n        resolve: () => viewer\r\n    };\r\n    const schema = new GraphQLSchema({\r\n        query: new GraphQLObjectType({\r\n            name: 'Query',\r\n            fields: () => ({\r\n                viewer: {\r\n                    type: viewerType,\r\n                    resolve: () => viewer\r\n                }\r\n            })\r\n        }),\r\n        mutation: new GraphQLObjectType({\r\n            name: 'Mutation',\r\n            fields: () => ({\r\n                saveUser: userSchema.getSaveUserMutation(outputViewer),\r\n                getAuthToken: userSchema.getAuthTokenMutation(outputViewer),\r\n                saveProd: prodsSchema.getSaveProdMutation(),\r\n            })\r\n        })\r\n    });\r\n    return schema;\r\n}\r\nexport default Schema;\r\n//# sourceMappingURL=schema.js.map"]}