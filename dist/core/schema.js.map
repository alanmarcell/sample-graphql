{"version":3,"sources":["../../dist-esnext/core/schema.js"],"names":["Schema","userApp","productApp","authedUser","log","userSchema","prodsSchema","viewer","viewerType","name","fields","id","userConnection","getUserConnection","prods","getProds","outputViewer","type","resolve","schema","query","mutation","saveUser","getSaveUserMutation","getAuthToken","getAuthTokenMutation","saveProd","getSaveProdMutation"],"mappings":";;;;;;AAAA;;AACA;;AACA;;;;AACA;;;;;;AACA,SAASA,MAAT,CAAgBC,OAAhB,EAAyBC,UAAzB,EAAqCC,UAArC,EAAiDC,GAAjD,EAAsD;AAClD,QAAMC,aAAa,0BAAW,EAAEJ,gBAAF,EAAWE,sBAAX,EAAuBC,QAAvB,EAAX,CAAnB;AACA,QAAME,cAAc,2BAAY,EAAEJ,sBAAF,EAAcC,sBAAd,EAA0BC,QAA1B,EAAZ,CAApB;AACA,QAAMG,SAAS,EAAf;AACA,QAAMC,aAAa,+BAAsB;AACrCC,cAAM,QAD+B;AAErCC,gBAAQ;AAAA,mBAAO;AACXC,oBAAI,iCAAc,QAAd,CADO;AAEXC,gCAAgBP,WAAWQ,iBAAX,EAFL;AAGXC,uBAAOR,YAAYS,QAAZ;AAHI,aAAP;AAAA;AAF6B,KAAtB,CAAnB;AAQA,QAAMC,eAAe;AACjBC,cAAMT,UADW;AAEjBU,iBAAS;AAAA,mBAAMX,MAAN;AAAA;AAFQ,KAArB;AAIA,QAAMY,SAAS,2BAAkB;AAC7BC,eAAO,+BAAsB;AACzBX,kBAAM,OADmB;AAEzBC,oBAAQ;AAAA,uBAAO;AACXH,4BAAQ;AACJU,8BAAMT,UADF;AAEJU,iCAAS;AAAA,mCAAMX,MAAN;AAAA;AAFL;AADG,iBAAP;AAAA;AAFiB,SAAtB,CADsB;AAU7Bc,kBAAU,+BAAsB;AAC5BZ,kBAAM,UADsB;AAE5BC,oBAAQ;AAAA,uBAAO;AACXY,8BAAUjB,WAAWkB,mBAAX,CAA+BP,YAA/B,CADC;AAEXQ,kCAAcnB,WAAWoB,oBAAX,CAAgCT,YAAhC,CAFH;AAGXU,8BAAUpB,YAAYqB,mBAAZ;AAHC,iBAAP;AAAA;AAFoB,SAAtB;AAVmB,KAAlB,CAAf;AAmBA,WAAOR,MAAP;AACH;kBACcnB,M;AACf","file":"schema.js","sourcesContent":["import { GraphQLObjectType, GraphQLSchema } from 'graphql';\r\nimport { globalIdField } from 'graphql-relay';\r\nimport ProdsSchema from '../prods/prodsSchema';\r\nimport UserSchema from '../users/userSchema';\r\nfunction Schema(userApp, productApp, authedUser, log) {\r\n    const userSchema = UserSchema({ userApp, authedUser, log });\r\n    const prodsSchema = ProdsSchema({ productApp, authedUser, log });\r\n    const viewer = {};\r\n    const viewerType = new GraphQLObjectType({\r\n        name: 'Viewer',\r\n        fields: () => ({\r\n            id: globalIdField('Viewer'),\r\n            userConnection: userSchema.getUserConnection(),\r\n            prods: prodsSchema.getProds()\r\n        })\r\n    });\r\n    const outputViewer = {\r\n        type: viewerType,\r\n        resolve: () => viewer\r\n    };\r\n    const schema = new GraphQLSchema({\r\n        query: new GraphQLObjectType({\r\n            name: 'Query',\r\n            fields: () => ({\r\n                viewer: {\r\n                    type: viewerType,\r\n                    resolve: () => viewer\r\n                }\r\n            })\r\n        }),\r\n        mutation: new GraphQLObjectType({\r\n            name: 'Mutation',\r\n            fields: () => ({\r\n                saveUser: userSchema.getSaveUserMutation(outputViewer),\r\n                getAuthToken: userSchema.getAuthTokenMutation(outputViewer),\r\n                saveProd: prodsSchema.getSaveProdMutation(),\r\n            })\r\n        })\r\n    });\r\n    return schema;\r\n}\r\nexport default Schema;\r\n//# sourceMappingURL=schema.js.map"]}