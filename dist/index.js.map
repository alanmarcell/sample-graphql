{"version":3,"sources":["../dist-esnext/index.js"],"names":["schema","json","file","fs","writeFile","JSON","stringify","err","log","getRunningUrl","app","use","static","createGraphqlSchema","config","dir","PORT","path","userApp","userRepository","productApp","productRepository","authedUser","dtCreated","Date","ip","seed","graphqlFolder","graphiql","listen","url","e"],"mappings":";;;;;;;;iCAuBA,WAAmCA,MAAnC,EAA2C;AACvC,cAAMC,OAAO,MAAM,sBAAQD,MAAR,gCAAnB;AACA,cAAME,OAAO,qBAAb;AACAC,WAAGC,SAAH,CAAc,IAAGF,IAAK,EAAtB,EAAyBG,KAAKC,SAAL,CAAeL,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAzB,EAAwD,eAAO;AAC3D,gBAAIM,GAAJ,EACI,MAAMA,GAAN;AACJC,gBAAI,sBAAJ,EAA4BC,cAAcP,IAAd,CAA5B;AACH,SAJD;AAKAQ,YAAIC,GAAJ,CAAQ,SAAR,EAAmB,kBAAQC,MAAR,CAAe,QAAf,CAAnB;AACH,K;;oBATcC,mB;;;;;AAvBf;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;IAAYV,E;;AACZ;;AACA;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAbA,iBAAOW,MAAP;AAcO,MAAMN,oBAAM,0BAAQ,EAAEO,KAAK,QAAP,EAAR,CAAZ;AACP,MAAML,MAAM,wBAAZ;AACAA,IAAIC,GAAJ,CAAQ,qBAAR;AACAH,IAAI,iBAAJ;AACA,MAAMQ,OAAO,IAAb;AACA,SAASP,aAAT,CAAuBQ,IAAvB,EAA6B;AACzB,WAAQ,oBAAmBD,IAAK,GAAEC,IAAK,EAAvC;AACH;;AAWD,kBAAC,aAAY;AACT,QAAI;AACA,cAAMC,UAAU,2BAAc;AAC1BC,4BAAgB,MAAM,mEAAgC,MAAhC,CADI;AAE1BX;AAF0B,SAAd,CAAhB;AAIA,cAAMY,aAAa,oBAAiB;AAChCC,+BAAmB,MAAM,+DAAmC,UAAnC,CADO;AAEhCb;AAFgC,SAAjB,CAAnB;AAIA,cAAMc,aAAa;AACfC,uBAAW,IAAIC,IAAJ,EADI;AAEfC,gBAAI;AAFW,SAAnB;AAIA,cAAMP,QAAQQ,IAAR,CAAaJ,UAAb,CAAN;AACA,cAAMtB,SAAS,sBAAOkB,OAAP,EAAgBE,UAAhB,EAA4BE,UAA5B,EAAwCd,GAAxC,CAAf;AACA,cAAMmB,gBAAgB,UAAtB;AACAjB,YAAIC,GAAJ,CAAQgB,aAAR,EAAuB,8BAAY;AAC/B3B,kBAD+B;AAE/B4B,sBAAU;AAFqB,SAAZ,CAAvB;AAIA,cAAMf,oBAAoBb,MAApB,CAAN;AACAU,YAAImB,MAAJ,CAAWb,IAAX,EAAiB,YAAM;AACnB,kBAAMc,MAAMrB,cAAckB,aAAd,CAAZ;AACAnB,gBAAK,cAAasB,GAAI,EAAtB;AACH,SAHD;AAIH,KAzBD,CA0BA,OAAOC,CAAP,EAAU;AACNvB,YAAIuB,CAAJ;AACH;AACJ,CA9BD;AA+BA","file":"index.js","sourcesContent":["import dotenv from 'dotenv';\r\ndotenv.config();\r\nimport cors from 'cors';\r\nimport express from 'express';\r\nimport GraphQlHttp from 'express-graphql';\r\nimport * as fs from 'fs';\r\nimport { graphql } from 'graphql';\r\nimport { introspectionQuery } from 'graphql/utilities';\r\nimport Schema from './core/schema';\r\nimport MONGO_URL from './mongoDbUrl';\r\nimport { createApp as createUserApp } from 'ptz-user-app';\r\nimport { createUserRepository } from 'ptz-user-repository';\r\nimport { createApp as createProductApp } from './prods/app';\r\nimport { createProductRepository } from './prods/repository';\r\nimport logFile from 'ptz-log-file';\r\nexport const log = logFile({ dir: './logs' });\r\nconst app = express();\r\napp.use(cors());\r\nlog('starting server');\r\nconst PORT = 8080;\r\nfunction getRunningUrl(path) {\r\n    return `http://localhost:${PORT}${path}`;\r\n}\r\nasync function createGraphqlSchema(schema) {\r\n    const json = await graphql(schema, introspectionQuery);\r\n    const file = '/public/schema.json';\r\n    fs.writeFile(`.${file}`, JSON.stringify(json, null, 2), err => {\r\n        if (err)\r\n            throw err;\r\n        log('Json schema created!', getRunningUrl(file));\r\n    });\r\n    app.use('/public', express.static('public'));\r\n}\r\n(async () => {\r\n    try {\r\n        const userApp = createUserApp({\r\n            userRepository: await createUserRepository(MONGO_URL, 'user'),\r\n            log\r\n        });\r\n        const productApp = createProductApp({\r\n            productRepository: await createProductRepository(MONGO_URL, 'products'),\r\n            log\r\n        });\r\n        const authedUser = {\r\n            dtCreated: new Date(),\r\n            ip: '0.0.0.0'\r\n        };\r\n        await userApp.seed(authedUser);\r\n        const schema = Schema(userApp, productApp, authedUser, log);\r\n        const graphqlFolder = '/graphql';\r\n        app.use(graphqlFolder, GraphQlHttp({\r\n            schema,\r\n            graphiql: true\r\n        }));\r\n        await createGraphqlSchema(schema);\r\n        app.listen(PORT, () => {\r\n            const url = getRunningUrl(graphqlFolder);\r\n            log(`Running on ${url}`);\r\n        });\r\n    }\r\n    catch (e) {\r\n        log(e);\r\n    }\r\n})();\r\n//# sourceMappingURL=index.js.map"]}